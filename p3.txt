REGISTER '/home/Ashmita/hadoop/Ashmita/Docker/twitterjars/elephant-bird-core-4.13.jar';
REGISTER '/home/Ashmita/hadoop/Ashmita/Docker/twitterjars/elephant-bird-hadoop-compat-4.13.jar';
REGISTER '/home/Ashmita/hadoop/Ashmita/Docker/twitterjars/elephant-bird-pig-4.13.jar';
REGISTER '/home/Ashmita/hadoop/Ashmita/Docker/Datafujar/datafu-1.2.0.jar';
DEFINE TwitterJsonLoader com.twitter.elephantbird.pig.load.JsonLoader('- nestedLoad=true ');
JsonInput = LOAD '/user/cloudera/yelpdataset/yelp_academic_dataset_business.json' USING TwitterJsonLoader() AS (entity: map[]);
rawtable = FOREACH JsonInput GENERATE (CHARARRAY)$0#'type' as type, (CHARARRAY)$0#'business_id' as business_id,(CHARARRAY)$0#'categories' as categories:chararray,(double)$0#'stars' as stars:double,(double)$0#'latitude' as latitude:double,(double)$0#'longitude' as longitude:double;
tok_table = FOREACH rawtable  GENERATE type,business_id,stars,latitude,longitude,TOKENIZE(categories,',') as cattuple;
tup_table = FOREACH tok_table GENERATE type,business_id,stars,latitude,longitude,FLATTEN(cattuple) as dup_category;
cle_data = FOREACH tup_table GENERATE type,business_id,stars,latitude,longitude,REPLACE(dup_category,'\\"','') as category;
clean_table = FOREACH cle_data GENERATE type,business_id,stars,latitude,longitude,REPLACE(category,'\\[','') as category;
clean_table = FOREACH clean_table GENERATE business_id,(double)stars,(double)latitude,(double)longitude,REPLACE(category,'\\]','') as category;
clean_table = FILTER clean_table BY category is not null;
distance_find = FOREACH clean_table GENERATE business_id,category,(double)stars,(double)latitude,(double)longitude,datafu.pig.geo.HaversineDistInMiles(latitude, longitude, 40.4411801, -79.9428294) as distance;
clean_dist = FILTER distance_find BY (distance <= 5.0);
by_busi_category = GROUP clean_dist BY (category);
avg_by_ratings = FOREACH by_busi_category GENERATE FLATTEN(group) AS (category),AVG(clean_dist.stars) as rating_avg;
ranking_table = RANK avg_by_ratings by rating_avg DESC DENSE;
STORE distance_find into './Question3/GroupedData';
STORE ranking_table into './Question3/Result'; 