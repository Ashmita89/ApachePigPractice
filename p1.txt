REGISTER '/home/Ashmita/hadoop/Ashmita/Docker/twitterjars/elephant-bird-core-4.13.jar';
REGISTER '/home/Ashmita/hadoop/Ashmita/Docker/twitterjars/elephant-bird-hadoop-compat-4.13.jar';
REGISTER '/home/Ashmita/hadoop/Ashmita/Docker/twitterjars/elephant-bird-pig-4.13.jar';
REGISTER '/home/Ashmita/hadoop/Ashmita/Docker/Datafujar/datafu-1.2.0.jar';
DEFINE Inside datafu.pig.util.InUDF();
DEFINE TwitterJsonLoader com.twitter.elephantbird.pig.load.JsonLoader('- nestedLoad=true ');
JsonInput = LOAD '/user/cloudera/yelpdataset/yelp_academic_dataset_business.json' USING TwitterJsonLoader() AS (entity: map[]);
rawtable = FOREACH JsonInput GENERATE (CHARARRAY)$0#'business_id' as business_id, (CHARARRAY)$0#'city' as city,(CHARARRAY)$0#'state' as state,(CHARARRAY)$0#'categories' as categories:chararray,(long)$0#'review_count' as review_count:long;
rawtable = FILTER rawtable BY Inside(state,'AL','MO','AK','MT','AZ','NE','AR','NV','CA','NH','CO','NJ','CT','NM','DE','NY','DC','NC','FL','ND','GA','OH','HI','OK','ID','OR','IL','PA','IN','RI','IA','SC','KS','SD','KY','TN','LA','TX','ME','UT','MD','VT','MA','VA','MI','WA','MN','WV','MS','WI','WY');
tok_table = FOREACH rawtable  GENERATE business_id,city,TOKENIZE(categories,',') as cattuple,review_count;
tup_table = FOREACH tok_table GENERATE business_id,city,FLATTEN(cattuple) as dup_category,review_count;
cle_data = FOREACH tup_table GENERATE business_id,city,REPLACE(dup_category,'\\"','') as category,review_count;
clean_table = FOREACH cle_data GENERATE business_id,city,REPLACE(category,'\\[','') as category,review_count;
clean_table = FOREACH clean_table GENERATE business_id,city,REPLACE(category,'\\]','') as category,(long)review_count;
clean_table = FILTER clean_table BY category is not null;
by_city_and_busi_category = GROUP clean_table BY (city,category);
by_review_counts = FOREACH by_city_and_busi_category GENERATE FLATTEN(group) AS (city,category), SUM(clean_table.review_count) AS total_review_count:long;
STORE by_city_and_busi_category into './Question1/GroupedData';
STORE by_review_counts into './Question1/Result'; 